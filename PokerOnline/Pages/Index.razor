@page "/"

@if (null == _table) {
    <div class="centered login content active">
        <h5 class="accentFGCyan">Login</h5>
        <input type="text" placeholder="Username" @bind="@_username" style="width: 100%" />
        <button @onclick="@Connect" style="position: relative; top: 30px; width: 100%">Connect</button>
    </div>
}
else {
<div class="vertical_flex centered">
    <div class="@(_player == _table.CurrPlayer ? "vertical content active" : "vertical content")">
        <UserComponent PlayerModel="_player"/>
    </div>
    <div style="padding-top: 0px;">
        <div style="padding-top: 0px; min-height: 90px;">
            @foreach (var player in _table.Players) {
				if (_player == player) continue;
                <PlayerComponent PlayerModel="player" Active="@(player == _table.CurrPlayer)" />
            }
        </div>
        <div>
            <TableComponent TableModel="_table" />
        </div>
    </div>
</div>

    @*<button @onclick="@UpdateTmp">Update</button>*@
}

@code {
    private Table _table;
    private string _username;
    private Player _player;
	private bool _active = false;

    private void Connect()
    {
        if (!String.IsNullOrEmpty(_username))
        {
            _player = new Player(_username, 500);
            _table = Table.GetReference();

            _player.JoinTable(_table);

			_table.TableStateChanged += (o,e) => InvokeAsync(() => StateHasChanged());

            if (_table.Players.Count == 3)
                _table.StartGame();
        }
    }

    @*private void UpdateTmp()
    {
        StateHasChanged();
    }*@
}


